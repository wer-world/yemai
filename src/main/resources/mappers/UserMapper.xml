<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.dao.UserDao">
    <insert id="registerUser">
        insert into easybuy_user(loginName, userName, password, identityCode, email, mobile)
            value (#{loginName}, #{userName}, #{password}, #{identityCode}, #{email}, #{mobile})
    </insert>
    <select id="checkName" resultType="User">
        select id,loginName,userName,password,sex,identityCode,email,mobile,type
        from easybuy_user where isDelete = 0
        <if test="loginName!=null and loginName!=''">
            and loginName = #{loginName}
        </if>
    </select>
    <select id="checkLogin" resultType="User">
        select id,loginName,userName,password,sex,identityCode,email,mobile,type
        from easybuy_user
        <where>
            isDelete = 0 and loginName = #{loginName}
        </where>
    </select>
    <select id="identityCheck" resultType="User">
        select id,loginName,userName,password,sex,identityCode,email,mobile,type
        from easybuy_user
        <where>
            isDelete = 0
            <if test="identityCode!=null and identityCode!=''">
                and identityCode = #{identityCode}
            </if>
        </where>
    </select>
    <update id="findPsw">
        update easybuy_user
        set password=#{password}
        where loginName = #{loginName}
    </update>
    <select id="getNewsList" resultType="User">
        select id, title, content, createTime
        from easybuy_news
        where isDelete = 0
        order by createTime desc
        limit #{form},#{pageSize}

    </select>
    <select id="getUser" resultType="User">
        select u.id,
        u.loginName,
        u.userName,
        u.password,
        u.sex,
        u.identityCode,
        u.email,
        u.mobile,
        a.address,
        u.type
        from easybuy_user u,
        easybuy_user_address a
        where u.isDelete = 0
        and a.isDelete = 0
        and u.id = a.userId
        and isDefault = 1
        <if test="id != null and id > 0">
            and u.id = #{id}
        </if>
    </select>
    <select id="getUserListPage" resultType="User">
        SELECT id,
        loginName,
        userName,
        password,
        sex,
        identityCode,
        email,
        mobile,
        type
        FROM easybuy_user WHERE isDelete=0
        <if test="type!=0 and type!=null">
            and type = #{type}
        </if>
        <if test="userName!=null and userName!=''">
            and userName like concat('%',#{userName},'%')
        </if>
    </select>

    <select id="getUserCount" resultType="int">
        SELECT count(1)
        FROM easybuy_user WHERE isDelete=0
        <if test="type!=0 and type!=null">
            and type = #{type}
        </if>
        <if test="userName!=null and userName!=''">
            and userName like concat('%',#{userName},'%')
        </if>
    </select>

    <update id="updateUser">
        UPDATE easybuy_user
        SET loginName    = #{loginName},
            userName     = #{userName},
            sex          =#{sex},
            identityCode = #{identityCode},
            email=#{email},
            mobile=#{mobile},
            type=#{type}
        WHERE isDelete = 0
          AND id = #{id};
    </update>

    <delete id="deleteUser">
        UPDATE easybuy_user
        SET isDelete=1
        WHERE id = #{id};
    </delete>

    <select id="getUserById" resultType="User">
        select id,
            loginName,
            userName,
            sex,
            email,
            mobile,
            identityCode,
            type
        from easybuy_user
        where isDelete = 0
          and id = #{id}
    </select>
    <update id="modifyPasswordById">
        update easybuy_user set password=#{password} where id=#{id} and isDelete = 0
    </update>
</mapper>
